x <- 3
x = 3
install.packages("tidyverse")
install.packages(c("ggrepel", "ggalt", "assertr", "countrycode", "xaringan", "officer", "leaflet", "leaflet.extras", "profvis", "dlnm", "ggmap", "trelliscope", "htmlwidgets", "urltools", "rvest"))
install.packages()
install.packages('tinytex')
install.packages('rmarkdown')
tinytex::install_tinytex()
gwtd(*)
gwtd()
getwd()
setwd('..')
getwd()
list.files()
setwd('Code')
getwd()
setwd('isithotrightnow/')
source('heatmap.R')
install.packages('plot3D')
source('heatmap.R')
source('heatmap.R')
ls()
station_set
str(station_set)
ls()
source('heatmap.R')
ls()
?saveRDS
saveRDS(station_set, 'heatmap-data.rds')
names(station_set)
names(station_set[[1]])
ls()
ls()
library(tidyverse)
library(purrr)
station_set = loadRDS('heatmap-data.rds')
station_set = readRDS('heatmap-data.rds')
names(station_set[[1]])
?pluck
station_set %>% pluck('id')
map(station_set, pluck, 'id')
?flatten
map_chr(station_set, pluck, 'id')
names(station_set[[1]])
station_set[[1]]$percentileHeatmap_array
station_set[[1]]$categoryHeatmap_array
tidy_data =
station_set %>%
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map_chr(., pluck, 'percentiles'),
categories  = map_chr(., pluck, 'categories'))
tidy_data
station_set %>% data_frame(id = map_chr(., pluck, 'id'))
station_set %>% { data_frame(id = map_chr(., pluck, 'id')) }
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map_chr(., pluck, 'percentiles'),
categories  = map_chr(., pluck, 'categories'))
}
station_set %>% { data_frame(id = map_chr(., pluck, 'id'), name = map_chr(., pluck, 'name')) }
station_set %>%
{
data_frame(
id = map_chr(., pluck, 'id'),
name = map_chr(., pluck, 'name'))
}
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentiles'),
categories  = map(., pluck, 'categories'))
}
tidy_data
names(station_set[[1]])
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array'),
categories  = map(., pluck, 'categoryHeatmap_array'))
}
tidy_data
tidy_data$percentiles[1]
class(tidy_data$percentiles[1])
class(tidy_data$percentiles[1][[1]])
tidy_data %>% unnest()
tidy_data$percentiles[1] %>% as_data_frame()
tidy_data$percentiles[1] %>% as_tibble()
tidy_data$percentiles[1][[1]] %>% as_tibble()
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array') %>% as_tibble(),
categories  = map(., pluck, 'categoryHeatmap_array')  %>% as_tibble())
}
station_set[[1]]$percentileHeatmap_array
class(station_set[[1]]$percentileHeatmap_array)
tidy_data
tidy_data %>% mutate(pct_df = map(.$percentiles, as_tibble))
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array') %>% map(., as_tibble),
categories  = map(., pluck, 'categoryHeatmap_array')  %>% as_tibble())
}
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array') %>% { map(., as_tibble) },
categories  = map(., pluck, 'categoryHeatmap_array')  %>% as_tibble())
}
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array'),
categories  = map(., pluck, 'categoryHeatmap_array'))
} %>%
mutate(
percentiles = map(.$percentiles, as_tibble),
categories = map(.$categories, as_tibble))
tidy_data
tidy_data$percentiles[1]
tidy_data$categories[1]
?as_tibble
?as_tibble.matrix
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., ~
pluck('percentileHeatmap_array') %>%
as_tibble()),
categories = map(., ~
pluck('categoryHeatmap_array') %>%
as_tibble()))
}
tidy_data
tidy_data$percentiles[1]
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
# percentiles = map(., pluck, 'percentileHeatmap_array'),
categories  = map(., pluck, 'categoryHeatmap_array'))
} %>%
# convert matrices to tibbles
mutate(
percentiles = map(.$percentiles, as_tibble),
categories = map(.$categories, as_tibble))
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array'),
categories  = map(., pluck, 'categoryHeatmap_array'))
} %>%
# convert matrices to tibbles
mutate(
percentiles = map(.$percentiles, as_tibble),
categories = map(.$categories, as_tibble))
tidy_data
tidy_data$percentiles[1]
tidy_data %>% unnest()
?unnest
tidy_data %>% unnest(percentiles)
tidy_data %>% unnest(percentiles, categories)
tidy_data %>% unnest(percentiles, drop = FALSE)
tidy_data$percentiles[1]
tidy_data$percentiles[1] %>% gather()
tidy_data$percentiles[1][[1]] %>% gather()
?rownames_to_column
tidy_data$percentiles[1][[1]] %>% rownames_to_column()
tidy_data$percentiles[1][[1]] %>% rownames_to_column('day')
tidy_data$percentiles[1][[1]] %>% set_names(1:12)
tidy_data$percentiles[1][[1]] %>% set_names(1:12) %>% gather()
tidy_data$percentiles[1][[1]] %>% set_names(1:12) %>% rownames_to_column('day') %>% gather(key = 'month')
tidy_data$percentiles[1][[1]] %>% set_names(1:12) %>% rownames_to_column('day')
?gather
tidy_data$percentiles[1][[1]] %>% set_names(1:12) %>% rownames_to_column('day') %>% gather(key = 'month', -day)
tidy_data$percentiles[1][[1]] %>% set_names(1:12) %>% rownames_to_column('day') %>% gather(key = 'month', value = 'value'. -day)
tidy_data$percentiles[1][[1]] %>% set_names(1:12) %>% rownames_to_column('day') %>% gather(key = 'month', value = 'value', -day)
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles = map(., pluck, 'percentileHeatmap_array'),
categories  = map(., pluck, 'categoryHeatmap_array'))
} %>%
# convert matrices to tibbles
mutate(
percentiles =
map(.$percentiles, as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'value', -day),
categories =
map(.$categories, as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'value', -day))
tidy_data
tidy_data$percentiles[1]
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
name        = map_chr(., pluck, 'name'),
percentiles =
map(., pluck, 'percentileHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'percentile', -day),
categories =
map(., pluck, 'categoryHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'category', -day))
} # %>%
tidy_data
tidy_data %>% unnest()
?unnest
select = dplyr::select
filter = dplyr::filter
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id          = map_chr(., pluck, 'id'),
# name        = map_chr(., pluck, 'name'),
percentiles =
map(., pluck, 'percentileHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'percentile', -day),
categories =
map(., pluck, 'categoryHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'category', -day))
} %>%
# no unnest and drop the duplicated columns
unnest() %>%
select(-day1, -month1)
tidy_data
?write_csv
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id   = map_chr(., pluck, 'id'),
# name = map_chr(., pluck, 'name'),
percentiles =
map(., pluck, 'percentileHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'percentile', -day),
categories =
map(., pluck, 'categoryHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'category', -day))
} %>%
# now unnest and drop the duplicated columns
unnest() %>%
mutate(date = as.Date(paste('2018', month, day, sep = '-'))) %>%
select(id, date, percentile, category) %>%
# now nest by station and write back out
nest(-id) %>%
{
map(write_csv, paste0('databackup/', .$id, '-2018.csv'))
}
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id   = map_chr(., pluck, 'id'),
# name = map_chr(., pluck, 'name'),
percentiles =
map(., pluck, 'percentileHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'percentile', -day),
categories =
map(., pluck, 'categoryHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'category', -day))
} %>%
# now unnest and drop the duplicated columns
unnest() %>%
mutate(date = as.Date(paste('2018', month, day, sep = '-'))) %>%
select(id, date, percentile, category) %>%
# now nest by station and write back out
nest(-id) %>%
{
map(.$data, write_csv, paste0('databackup/', .$id, '-2018.csv'))
}
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id   = map_chr(., pluck, 'id'),
# name = map_chr(., pluck, 'name'),
percentiles =
map(., pluck, 'percentileHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'percentile', -day),
categories =
map(., pluck, 'categoryHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'category', -day))
} %>%
# now unnest and drop the duplicated columns
unnest() %>%
mutate(date = as.Date(paste('2018', month, day, sep = '-'))) %>%
select(id, date, percentile, category) %>%
# now nest by station and write back out
nest(-id)
tidy_data
tidy_data$data[1]
?map2
# write 'em out to disk
map(tidy_data$data, tidy_data$id,
~ write_csv(.x, paste0('databackup/', .y, '-2018.csv')))
getwd()
# write 'em out to disk
walk2(tidy_data$data, tidy_data$id,
~ write_csv(.x, paste0('databackup/', .y, '-2018.csv')))
# get the nested list structure into a nested data frame
tidy_data =
station_set %>%
{
data_frame(
id   = map_chr(., pluck, 'id'),
# name = map_chr(., pluck, 'name'),
percentiles =
map(., pluck, 'percentileHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'percentile', -day),
categories =
map(., pluck, 'categoryHeatmap_array') %>%
map(as_tibble) %>%
map(set_names, 1:12) %>%
map(rownames_to_column, 'day') %>%
map(gather, key = 'month', value = 'category', -day))
} %>%
# now unnest, drop the duplicated columns and then nest by station
unnest() %>%
mutate(date = as.Date(paste('2018', month, day, sep = '-'))) %>%
select(id, date, percentile) %>%
nest(-id)
# write 'em out to disk
walk2(tidy_data$data, tidy_data$id,
~ write_csv(.x, paste0('databackup/', .y, '-2018.csv')))
Sys.time()
library(lubridate)
Sys.time()
Sys.time() %>% with_tz('Australia/Adelaide')
Sys.time() %>% with_tz('Australia/Adelaide') %>% as.Date()
Sys.time() %>% with_tz('US/Pacific') %>% as.Date()
Sys.time() %>% with_tz('US/Pacific')
Sys.time() %>% with_tz('US/Hawaii')
Sys.time() %>% with_tz('US/Hawaii') %>% as.Date()
Sys.time() %>% with_tz('US/Hawaii') %>% force_tz('US/Hawaii')
Sys.time() %>% with_tz('US/Hawaii') %>% force_tz('US/Hawaii') %>% as.Date()
?as.Date
Sys.time() %>% with_tz('US/Hawaii') %>% as.Date(tz = 'US/Hawaii')
Sys.time() %>% as.Date(tz = 'US/Hawaii')
?with_tz
Sys.time()
Sys.time() %>% force_tz('US/Hawaii')
Sys.time() %>% with_tz('US/Hawaii')
format(Sys.time(), format = '%d %B')
format(Sys.time(), format = '%d %B', tz = 'US/Hawaii')
